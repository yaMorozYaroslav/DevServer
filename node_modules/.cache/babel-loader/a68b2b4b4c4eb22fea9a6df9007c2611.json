{"ast":null,"code":"var _jsxFileName = \"/home/yaroslav/desktop/tasks/src/containers/StorCont.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getStoryIds, getStory } from '../services/hnApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StorCont = () => {\n  _s();\n\n  const [storyIds, setStoryIds] = useState([]);\n  useEffect(() => {\n    getStoryIds().then(data => setStoryIds(data));\n    getStory(30388152).then(data => console.log(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: JSON.stringify(storyIds)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 13\n  }, this);\n};\n\n_s(StorCont, \"Q/S4cBBIAd5tDXHPzpG8WieIXSU=\");\n\n_c = StorCont;\n\nvar _c;\n\n$RefreshReg$(_c, \"StorCont\");","map":{"version":3,"sources":["/home/yaroslav/desktop/tasks/src/containers/StorCont.js"],"names":["React","useEffect","useState","getStoryIds","getStory","StorCont","storyIds","setStoryIds","then","data","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,mBAApC;;AACC,OAAO,MAAMC,QAAQ,GAAG,MAAK;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACbE,IAAAA,WAAW,GAAGK,IAAd,CAAmBC,IAAI,IAAEF,WAAW,CAACE,IAAD,CAApC;AACAL,IAAAA,QAAQ,CAAC,QAAD,CAAR,CAAmBI,IAAnB,CAAwBC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAhC;AACA,GAHQ,EAGN,EAHM,CAAT;AAII,sBAAO;AAAA,cAAIG,IAAI,CAACC,SAAL,CAAeP,QAAf;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACJ,CAPO;;GAAMD,Q;;KAAAA,Q","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {getStoryIds, getStory} from '../services/hnApi';\n export const StorCont = () =>{\n\tconst [storyIds, setStoryIds] = useState([]);\n\tuseEffect(()=>{\n\t\tgetStoryIds().then(data=>setStoryIds(data));\n\t\tgetStory(30388152).then(data => console.log(data));\n\t}, []);\n     return <p>{JSON.stringify(storyIds)}</p>;\n};"]},"metadata":{},"sourceType":"module"}